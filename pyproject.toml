[project]
name = "fea"
requires-python = ">=3.10"
authors = [
    {name = "Mingyang Bao", email = "mingyangbao@hust.edu.cn"}
]
readme = 'README.md'
license = { file = "LICENSE.txt" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Languagep :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
]
dynamic = [
    "version"
]


[tool.ruff]
line-length = 120
lint.extend-select = [
  # pyflakes
  "F",
  # pycodestyle
  "E", "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # flake8-debugger
  "T10",
  # flake8-gettext
  "INT",
  # pylint
  "PL",
  # flake8-pytest-style
  "PT",
  # misc lints
  "PIE",
  # flake8-pyi
  "PYI",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
  # type-checking imports
  "TCH",
  # comprehensions
  "C4",
  # pygrep-hooks
  "PGH",
  # Ruff-specific rules
  "RUF",
  # flake8-bandit: exec-builtin
  "S102",
  # numpy-legacy-random
  "NPY002",
  # Perflint
  "PERF",
  # flynt
  "FLY",
  # flake8-logging-format
  "G",
  # flake8-future-annotations
  "FA",
]
lint.ignore = [
    # `try`-`except` within a loop incurs performance overhead
    "PERF203",
    # Module level import not at top of file
    "E402",
    # Use a regular `assert` instead of unittest-style `assertIn`
    "PT009",
    # [Conflict] single-line-implicit-string-concatenation
    "ISC001",
    # Too many statements ( > 50)
    "PLR0915",
    # Too many arguments in function definition ( > 5)
    "PLR0913",
    # Too many branches ( > 12)
    "PLR0912",
]
lint.flake8-quotes = {inline-quotes = "single", multiline-quotes = "double"}
format.quote-style="single"
target-version = "py312"
exclude = [
    "ignore",
    ".venv",
]
